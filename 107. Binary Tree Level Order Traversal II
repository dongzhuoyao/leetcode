/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        queue<TreeNode*> q;
        vector<vector<int>> result;
        if(root==NULL)
            return result;
        q.push(root);
        vector<int> first;
        first.push_back(root->val);
        result.push_back(first);
        while(!q.empty()){
            vector<int> tmpV;
            int size = q.size();
            bool isInserted = false;
            for(int i=0;i<size;i++){
                TreeNode* tmp = q.front();
                q.pop();
                if(tmp->left!=NULL){
                    isInserted = true;
                    tmpV.push_back(tmp->left->val);
                    q.push(tmp->left);
                }
                if(tmp->right!=NULL){
                    isInserted = true;
                    tmpV.push_back(tmp->right->val);
                    q.push(tmp->right);
                }
            }
            if(isInserted == true){
                result.push_back(tmpV);
            }
        }
        
        reverse(result.begin(),result.end());
        return result;
    }
};
