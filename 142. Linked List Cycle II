/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(head==NULL||head->next==NULL)
            return false;
        ListNode *fast=head,*slow=head;
        bool hasCircle=false;
        while(fast&&fast->next){
            fast = fast->next->next;
            slow = slow->next;
            if(fast==slow){
                hasCircle=true;
               break;
            }
        }
        if(!hasCircle)
            return NULL;
        slow = head;
        while(slow!=fast){
            fast=fast->next;
            slow = slow->next;
        }
        
        return slow;
        
    }
};
