class Solution {
private:
    vector<vector<int> > result;
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        result.clear();
        vector<int> tmp;
        sort(nums.begin(),nums.end());
        dfs(nums,0,tmp);
        return result;
    }
    
    void dfs(vector<int> nums,int i,vector<int> tmp){
        if(i==nums.size()){
            result.push_back(tmp);
            return;
        }
        //include i-th element
        tmp.push_back(nums[i]);
        dfs(nums,i+1,tmp);
        tmp.pop_back();
        
        //exclude i-th element
        dfs(nums,i+1,tmp);
    }
};
